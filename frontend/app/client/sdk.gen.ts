// This file is auto-generated by @hey-api/openapi-ts

import type {Client, Options as Options2, TDataShape} from './client';
import {client} from './client.gen';
import type {
    GetScenarioScenariosScenarioIdGetData,
    GetScenarioScenariosScenarioIdGetErrors,
    GetScenarioScenariosScenarioIdGetResponses,
    GetScenariosScenariosGetData,
    GetScenariosScenariosGetResponses,
    PatchScenarioScenariosScenarioIdPatchData,
    PatchScenarioScenariosScenarioIdPatchErrors,
    PatchScenarioScenariosScenarioIdPatchResponses,
    PostScenarioScenariosPostData,
    PostScenarioScenariosPostErrors,
    PostScenarioScenariosPostResponses,
    PutScenarioScenariosScenarioIdPutData,
    PutScenarioScenariosScenarioIdPutErrors,
    PutScenarioScenariosScenarioIdPutResponses
} from './types.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> =
    Options2<TData, ThrowOnError>
    & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Get Scenarios
 */
export const getScenariosScenariosGet = <ThrowOnError extends boolean = false>(options?: Options<GetScenariosScenariosGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetScenariosScenariosGetResponses, unknown, ThrowOnError>({
        url: '/scenarios/',
        ...options
    });
};

/**
 * Post Scenario
 */
export const postScenarioScenariosPost = <ThrowOnError extends boolean = false>(options: Options<PostScenarioScenariosPostData, ThrowOnError>) => {
    return (options.client ?? client).post<PostScenarioScenariosPostResponses, PostScenarioScenariosPostErrors, ThrowOnError>({
        url: '/scenarios/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Scenario
 */
export const getScenarioScenariosScenarioIdGet = <ThrowOnError extends boolean = false>(options: Options<GetScenarioScenariosScenarioIdGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GetScenarioScenariosScenarioIdGetResponses, GetScenarioScenariosScenarioIdGetErrors, ThrowOnError>({
        url: '/scenarios/{scenario_id}',
        ...options
    });
};

/**
 * Patch Scenario
 */
export const patchScenarioScenariosScenarioIdPatch = <ThrowOnError extends boolean = false>(options: Options<PatchScenarioScenariosScenarioIdPatchData, ThrowOnError>) => {
    return (options.client ?? client).patch<PatchScenarioScenariosScenarioIdPatchResponses, PatchScenarioScenariosScenarioIdPatchErrors, ThrowOnError>({
        url: '/scenarios/{scenario_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Put Scenario
 */
export const putScenarioScenariosScenarioIdPut = <ThrowOnError extends boolean = false>(options: Options<PutScenarioScenariosScenarioIdPutData, ThrowOnError>) => {
    return (options.client ?? client).put<PutScenarioScenariosScenarioIdPutResponses, PutScenarioScenariosScenarioIdPutErrors, ThrowOnError>({
        url: '/scenarios/{scenario_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

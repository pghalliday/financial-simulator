"""more types

Revision ID: 80dbb79485c5
Revises: 7d5582247469
Create Date: 2025-09-27 18:25:49.224959

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '80dbb79485c5'
down_revision: Union[str, Sequence[str], None] = '7d5582247469'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rate',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_rate')),
    sa.UniqueConstraint('name', name=op.f('uq_rate_name'))
    )
    op.create_table('value',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_value')),
    sa.UniqueConstraint('name', name=op.f('uq_value_name'))
    )
    op.create_table('banded_rate',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['rate.id'], name=op.f('fk_banded_rate_id_rate')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_banded_rate'))
    )
    op.create_table('continuous_rate',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('annual_rate', sa.Numeric(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['rate.id'], name=op.f('fk_continuous_rate_id_rate')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_continuous_rate'))
    )
    op.create_table('decimal_value',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('value', sa.Numeric(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['value.id'], name=op.f('fk_decimal_value_id_value')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_decimal_value'))
    )
    op.create_table('periodic_rate',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('annual_rate', sa.Numeric(), nullable=False),
    sa.Column('period_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['rate.id'], name=op.f('fk_periodic_rate_id_rate')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_periodic_rate'))
    )
    op.create_table('rate_value',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('rate_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['value.id'], name=op.f('fk_rate_value_id_value')),
    sa.ForeignKeyConstraint(['rate_id'], ['rate.id'], name=op.f('fk_rate_value_rate_id_rate')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_rate_value'))
    )
    op.create_table('banded_rate_band',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('banded_rate_id', sa.Uuid(), nullable=False),
    sa.Column('lower_bound', sa.Numeric(), nullable=False),
    sa.Column('size', sa.Numeric(), nullable=True),
    sa.Column('rate_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['banded_rate_id'], ['banded_rate.id'], name=op.f('fk_banded_rate_band_banded_rate_id_banded_rate')),
    sa.ForeignKeyConstraint(['rate_id'], ['rate.id'], name=op.f('fk_banded_rate_band_rate_id_rate')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_banded_rate_band'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('banded_rate_band')
    op.drop_table('rate_value')
    op.drop_table('periodic_rate')
    op.drop_table('decimal_value')
    op.drop_table('continuous_rate')
    op.drop_table('banded_rate')
    op.drop_table('value')
    op.drop_table('rate')
    # ### end Alembic commands ###

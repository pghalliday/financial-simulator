"""initialize

Revision ID: 586a65f35436
Revises: 
Create Date: 2025-09-29 11:26:27.959949

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '586a65f35436'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('entity',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_entity')),
    sa.UniqueConstraint('name', name=op.f('uq_entity_name'))
    )
    op.create_table('ledger_account',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ledger_account')),
    sa.UniqueConstraint('name', name=op.f('uq_ledger_account_name'))
    )
    op.create_table('provider',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_provider')),
    sa.UniqueConstraint('name', name=op.f('uq_provider_name'))
    )
    op.create_table('rate',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_rate')),
    sa.UniqueConstraint('name', name=op.f('uq_rate_name'))
    )
    op.create_table('scenario',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_scenario')),
    sa.UniqueConstraint('name', name=op.f('uq_scenario_name'))
    )
    op.create_table('schedule',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_schedule')),
    sa.UniqueConstraint('name', name=op.f('uq_schedule_name'))
    )
    op.create_table('value',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_value')),
    sa.UniqueConstraint('name', name=op.f('uq_value_name'))
    )
    op.create_table('banded_rate',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['rate.id'], name=op.f('fk_banded_rate_id_rate')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_banded_rate'))
    )
    op.create_table('bank_account',
    sa.Column('asset_account', sa.Uuid(), nullable=False),
    sa.Column('interest_income_account', sa.Uuid(), nullable=False),
    sa.Column('interest_receivable_account', sa.Uuid(), nullable=False),
    sa.Column('fee_expenses_account', sa.Uuid(), nullable=False),
    sa.Column('fees_payable_account', sa.Uuid(), nullable=False),
    sa.Column('fees_provider_id', sa.Uuid(), nullable=False),
    sa.Column('fee_payment_schedule_id', sa.Uuid(), nullable=False),
    sa.Column('rate_provider_id', sa.Uuid(), nullable=False),
    sa.Column('interest_payment_schedule_id', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['asset_account'], ['ledger_account.id'], name=op.f('fk_bank_account_asset_account_ledger_account')),
    sa.ForeignKeyConstraint(['fee_expenses_account'], ['ledger_account.id'], name=op.f('fk_bank_account_fee_expenses_account_ledger_account')),
    sa.ForeignKeyConstraint(['fee_payment_schedule_id'], ['schedule.id'], name=op.f('fk_bank_account_fee_payment_schedule_id_schedule')),
    sa.ForeignKeyConstraint(['fees_payable_account'], ['ledger_account.id'], name=op.f('fk_bank_account_fees_payable_account_ledger_account')),
    sa.ForeignKeyConstraint(['fees_provider_id'], ['provider.id'], name=op.f('fk_bank_account_fees_provider_id_provider')),
    sa.ForeignKeyConstraint(['interest_income_account'], ['ledger_account.id'], name=op.f('fk_bank_account_interest_income_account_ledger_account')),
    sa.ForeignKeyConstraint(['interest_payment_schedule_id'], ['schedule.id'], name=op.f('fk_bank_account_interest_payment_schedule_id_schedule')),
    sa.ForeignKeyConstraint(['interest_receivable_account'], ['ledger_account.id'], name=op.f('fk_bank_account_interest_receivable_account_ledger_account')),
    sa.ForeignKeyConstraint(['rate_provider_id'], ['provider.id'], name=op.f('fk_bank_account_rate_provider_id_provider')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_bank_account')),
    sa.UniqueConstraint('name', name=op.f('uq_bank_account_name'))
    )
    op.create_table('continuous_rate',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('annual_rate', sa.Numeric(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['rate.id'], name=op.f('fk_continuous_rate_id_rate')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_continuous_rate'))
    )
    op.create_table('corporation_entity',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['entity.id'], name=op.f('fk_corporation_entity_id_entity')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_corporation_entity'))
    )
    op.create_table('decimal_value',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('value', sa.Numeric(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['value.id'], name=op.f('fk_decimal_value_id_value')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_decimal_value'))
    )
    op.create_table('individual_entity',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['entity.id'], name=op.f('fk_individual_entity_id_entity')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_individual_entity'))
    )
    op.create_table('ledger_account_component',
    sa.Column('ledger_account_id', sa.Uuid(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['ledger_account_id'], ['ledger_account.id'], name=op.f('fk_ledger_account_component_ledger_account_id_ledger_account')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ledger_account_component'))
    )
    op.create_table('periodic_rate',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('annual_rate', sa.Numeric(), nullable=False),
    sa.Column('period_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['rate.id'], name=op.f('fk_periodic_rate_id_rate')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_periodic_rate'))
    )
    op.create_table('rate_value',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('rate_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['value.id'], name=op.f('fk_rate_value_id_value')),
    sa.ForeignKeyConstraint(['rate_id'], ['rate.id'], name=op.f('fk_rate_value_rate_id_rate')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_rate_value'))
    )
    op.create_table('scenario_entity',
    sa.Column('scenario_id', sa.Uuid(), nullable=False),
    sa.Column('entity_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['entity_id'], ['entity.id'], name=op.f('fk_scenario_entity_entity_id_entity')),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenario.id'], name=op.f('fk_scenario_entity_scenario_id_scenario')),
    sa.PrimaryKeyConstraint('scenario_id', 'entity_id', name=op.f('pk_scenario_entity'))
    )
    op.create_table('banded_rate_band',
    sa.Column('banded_rate_id', sa.Uuid(), nullable=False),
    sa.Column('lower_bound', sa.Numeric(), nullable=False),
    sa.Column('size', sa.Numeric(), nullable=True),
    sa.Column('rate_id', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['banded_rate_id'], ['banded_rate.id'], name=op.f('fk_banded_rate_band_banded_rate_id_banded_rate')),
    sa.ForeignKeyConstraint(['rate_id'], ['rate.id'], name=op.f('fk_banded_rate_band_rate_id_rate')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_banded_rate_band'))
    )
    op.create_table('corporation_entity_bank_account',
    sa.Column('corporation_entity_id', sa.Uuid(), nullable=False),
    sa.Column('bank_account_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['bank_account_id'], ['bank_account.id'], name=op.f('fk_corporation_entity_bank_account_bank_account_id_bank_account')),
    sa.ForeignKeyConstraint(['corporation_entity_id'], ['corporation_entity.id'], name=op.f('fk_corporation_entity_bank_account_corporation_entity_id_corporation_entity')),
    sa.PrimaryKeyConstraint('corporation_entity_id', 'bank_account_id', name=op.f('pk_corporation_entity_bank_account'))
    )
    op.create_table('individual_entity_bank_account',
    sa.Column('individual_entity_id', sa.Uuid(), nullable=False),
    sa.Column('bank_account_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['bank_account_id'], ['bank_account.id'], name=op.f('fk_individual_entity_bank_account_bank_account_id_bank_account')),
    sa.ForeignKeyConstraint(['individual_entity_id'], ['individual_entity.id'], name=op.f('fk_individual_entity_bank_account_individual_entity_id_individual_entity')),
    sa.PrimaryKeyConstraint('individual_entity_id', 'bank_account_id', name=op.f('pk_individual_entity_bank_account'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('individual_entity_bank_account')
    op.drop_table('corporation_entity_bank_account')
    op.drop_table('banded_rate_band')
    op.drop_table('scenario_entity')
    op.drop_table('rate_value')
    op.drop_table('periodic_rate')
    op.drop_table('ledger_account_component')
    op.drop_table('individual_entity')
    op.drop_table('decimal_value')
    op.drop_table('corporation_entity')
    op.drop_table('continuous_rate')
    op.drop_table('bank_account')
    op.drop_table('banded_rate')
    op.drop_table('value')
    op.drop_table('schedule')
    op.drop_table('scenario')
    op.drop_table('rate')
    op.drop_table('provider')
    op.drop_table('ledger_account')
    op.drop_table('entity')
    # ### end Alembic commands ###
